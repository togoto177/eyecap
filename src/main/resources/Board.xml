<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="boards">
	<resultMap type="Board" id="boardResult">
		<result property="board_seq" column="board_seq" />
		<result property="board_division" column="board_division" />
		<result property="board_notice" column="board_notice" />
		<result property="board_title" column="board_title" />
		<result property="board_content" column="board_content" />
		<result property="board_hit" column="board_hit" />
		<result property="board_use_yn" column="board_use_yn" />
		<result property="board_register_id" column="board_register_id" />
		<result property="board_register_date" column="board_register_date" />
		<result property="board_update_id" column="board_update_id" />
		<result property="board_update_date" column="board_update_date" />
		<result property="board_etc" column="board_etc" />

	</resultMap>
	
	<!-- 공통 쿼리 -->
	
	<insert id="board_insert" parameterType="Board">
	
		insert into board_tb
			
			values(
			#{board_seq},
			#{board_division},
			#{board_notice},
			#{board_title},
			#{board_content},
			#{board_hit},
			#{board_use_yn},
			#{board_register_id},
			now(),
			#{board_update_id},
			now(),
			#{board_etc}
		
        );
        <selectKey keyProperty="board_seq" resultType="Integer">
   			SELECT LAST_INSERT_ID();
  		</selectKey>        
	</insert>
	
	<select id="board_read" resultType="Board" parameterType="int"> 
        	
        	select * 
				from board_tb 
			where board_seq = #{board_seq}; 
	</select>	
	
    <update id="board_update" parameterType="java.util.HashMap">
    	update 
    	board_tb
    	    	
    	set
    	<if test="board_division.equals('archave')">
    	board_notice = #{board_notice},
		</if>
    	board_title = #{board_title},
    	board_content = #{board_content},
    	board_update_id = #{board_update_id},
    	board_update_date = now()

		where board_seq = #{board_seq};
    </update>
    
    <update id="board_delete" parameterType="java.util.HashMap">
    	
        update
            board_tb
		set
        board_use_yn = 'N',
        board_update_id = #{board_update_id},
        board_update_date = now()    
        where
        board_seq = #{board_seq};
            
    </update>
    
    
    <!-- 서브 리스트 쿼리  -->
    
	<select id="archave_list" resultType="Board" parameterType="java.util.HashMap">
	
         
         SELECT a.*, 
         (SELECT COUNT(b.file_seq)FROM file_tb b WHERE b.file_use_yn = 'y' AND b.board_seq = a.board_seq) AS file_cnt, 
         (SELECT SUM( b.file_hit )FROM file_tb b WHERE b.board_seq = a.board_seq AND b.file_use_yn =  'Y' ) AS file_hit, 
         (SELECT GROUP_CONCAT( b.file_sub_name,  '*', a.board_division,  '*', b.file_seq SEPARATOR  '|' ) FROM file_tb b WHERE a.board_seq = b.board_seq
         AND b.file_use_yn =  'Y') AS file_sub_name, 
         (SELECT GROUP_CONCAT( b.file_ori_name SEPARATOR  '|' ) FROM file_tb b WHERE a.board_seq = b.board_seq AND b.file_use_yn =  'Y') AS file_ori_name
         FROM board_tb a LEFT JOIN board_tb b ON a.board_seq = b.board_seq
         WHERE a.board_division = 'archave' and a.board_use_yn = 'Y'
		 <choose>
     	<when test="sch_type == 'board_title'">
		  AND a.board_title like CONCAT('%', #{sch_value}, '%')
		  </when>
		  <when test="sch_type == 'board_content'">
		  AND a.board_content like CONCAT('%', #{sch_value}, '%')
		  </when>
		  </choose>
        order by a.board_notice = 1 desc , a.board_seq desc
        
        limit #{start}, #{end};
	
	</select>
	
	<select id="archave_cnt" resultType="int" parameterType="Board">
	
	    select count(board_seq) from board_tb 
	    where board_division = 'archave' and board_use_yn = 'Y'
     	<choose>
	     	  <when test="sch_type == 'board_title'">
			  AND board_title like CONCAT('%', #{sch_value}, '%')
			  </when>
			  <when test="sch_type == 'board_content'">
			  AND board_content like CONCAT('%', #{sch_value}, '%')
			  </when>
	    </choose>
	
	</select>
	
	<select id="fnq_list" resultType="Board" parameterType="java.util.HashMap">
	
         
         SELECT a.*, 
         (SELECT COUNT(b.file_seq)FROM file_tb b WHERE b.file_use_yn = 'y' AND b.board_seq = a.board_seq) AS file_cnt, 
         (SELECT SUM( b.file_hit )FROM file_tb b WHERE b.board_seq = a.board_seq AND b.file_use_yn =  'Y' ) AS file_hit, 
         (SELECT GROUP_CONCAT( b.file_sub_name,  '*', a.board_division,  '*', b.file_seq SEPARATOR  '|' ) FROM file_tb b WHERE a.board_seq = b.board_seq
         AND b.file_use_yn =  'Y') AS file_sub_name, 
         (SELECT GROUP_CONCAT( b.file_ori_name SEPARATOR  '|' ) FROM file_tb b WHERE a.board_seq = b.board_seq AND b.file_use_yn =  'Y') AS file_ori_name
         FROM board_tb a LEFT JOIN board_tb b ON a.board_seq = b.board_seq
         WHERE a.board_division = 'fnq' and a.board_use_yn = 'Y'
		 <choose>
     	<when test="sch_type == 'board_title'">
		  AND a.board_title like CONCAT('%', #{sch_value}, '%')
		  </when>
		  <when test="sch_type == 'board_content'">
		  AND a.board_content like CONCAT('%', #{sch_value}, '%')
		  </when>
		  </choose>
        order by a.board_notice = 1 desc , a.board_seq desc
        
        limit #{start}, #{end};
	
	</select>
	
	<select id="fnq_cnt" resultType="int" parameterType="Board">
	
	    select count(board_seq) from board_tb 
	    where board_division = 'fnq' and board_use_yn = 'Y'
     	<choose>
	     	  <when test="sch_type == 'board_title'">
			  AND board_title like CONCAT('%', #{sch_value}, '%')
			  </when>
			  <when test="sch_type == 'board_content'">
			  AND board_content like CONCAT('%', #{sch_value}, '%')
			  </when>
	    </choose>
	
	</select>
	

</mapper>